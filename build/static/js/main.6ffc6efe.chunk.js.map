{"version":3,"sources":["components/auth/config.js","components/command/CommandControl.js","components/utilities/responseData.js","components/sounds/light-switch.mp3","components/sounds/camera-sound.mp3","components/sounds/Cartoon-eye.mp3","components/sounds/car-lock-sound.mp3","components/audio/Audio.js","components/utilities/utils.js","components/command/Command.jsx","components/left_aside/LeftAside.jsx","components/preference/Preference.jsx","components/dashboard/Dashboard.jsx","components/auth/OktaSignInWidget.js","components/auth/Login.js","components/images/neurolinks.jpg","components/home/Home.jsx","components/navbar/Navbar.jsx","App.js","reportWebVitals.js","index.js"],"names":["oktaAuthConfig","issuer","clientId","redirectUri","window","location","origin","oktaSignInConfig","baseUrl","authParams","recognition","webkitSpeechRecognition","SpeechRecognition","synth","speechSynthesis","myerror","speech","restartRecognition","a","stop","start","console","log","onresult","event","results","transcript","commandSwitcher","onend","onerror","push","error","say","message","voice","utterance","SpeechSynthesisUtterance","setVoice","rate","speak","value","getVoices","getErrors","responseHistory","greetingsPhrases","lightOnPhrases","lightOffPhrases","temperaturePhrases","humidityPhrases","lightPhrases","wakeNamePhrase","responseMessage","data","topic","temperature","humidity","randomMessage","history","getTimeAndDate","id","generateId","time","getRandomNumber","length","len","Math","floor","random","uuidv4","Date","now","date","hours","getHours","tempmin","getMinutes","minute","itContainsGeneric","command","category","itContains","contains","forEach","phrase","parseReExp","test","toUpperCase","toLowerCase","RegExp","sounds","light_switch_effect","camera_sound","cartoon_eye","car_lock","preferenceItems","HomeEnvi","url","loadPrerence","axios","get","promise","savePreference","item","parseInt","put","body","then","response","catch","err","getTemperature","currentTemp","res","Items","findUrl","loadWeatherData","feeds","setHomeEnvi","getHumidity","method","name","filter","temp","fliedNum","fieldName","currentVar","fee","getHomeEnvi","parseLightCommand","lightStatus","itContainsLightOn","itContainsLightOff","writeLightStatus","status","Audio","play","itContainsGreetings","setTimeout","Command","useState","setCommand","statusMessage","setStatusMessage","updateState","setInterval","getMessage","getLightStatus","className","onClick","e","style","backgroundColor","onChange","preventDefault","target","type","height","map","mess","leftAside","menuItems","handleChange","menu","selected","borderLeft","borderRadius","alias","Preference","myAPI","setMyAPI","tempUrl","setTempUrl","humidityUrl","setHumidityUrl","proximityUrl","setProximityUrl","useEffect","api","float","desc","paddingLeft","Dashboard","currentPage","setCurrentPage","setMenuItems","toggleSelected","changeStatus","LeftAside","OktaSignInWidget","config","onSuccess","onError","widgetRef","useRef","current","widget","OktaSignIn","showSignInToGetTokens","el","remove","ref","Login","useOktaAuth","oktaAuth","authState","isPending","isAuthenticated","to","pathname","tokens","handleLoginRedirect","Home","props","state","bg","Component","backgroundImage","neurolinks","Navabar","useHistory","login","logout","signOut","button","OktaAuth","App","restoreOriginalUri","_oktaAuth","originalUri","replace","toRelativeUrl","onAuthRequired","path","component","render","LoginCallback","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6ffc6efe.chunk.js","sourcesContent":["const oktaAuthConfig = {\r\n    // Note: If your app is configured to use the Implicit flow\r\n    // instead of the Authorization Code with Proof of Code Key Exchange (PKCE)\r\n    // you will need to add `pkce: false`\r\n    issuer: 'https://dev-650599.okta.com/oauth2/default',\r\n    clientId: '0oa8g1tlug6ALKdym357',\r\n    redirectUri: window.location.origin + '/login/callback',\r\n  };\r\n  \r\n  const oktaSignInConfig = {\r\n    baseUrl: 'https://dev-650599.okta.com',\r\n    clientId: '0oa8g1tlug6ALKdym357',\r\n    redirectUri: window.location.origin + '/login/callback',\r\n    authParams: {\r\n      // If your app is configured to use the Implicit flow\r\n      // instead of the Authorization Code with Proof of Code Key Exchange (PKCE)\r\n      // you will need to uncomment the below line\r\n      // pkce: false\r\n    }\r\n  };\r\n  \r\n  export { oktaAuthConfig, oktaSignInConfig };","import { commandSwitcher } from \"../utilities/utils\";\r\n\r\nexport const recognition = new window.webkitSpeechRecognition() || new window.SpeechRecognition();\r\nexport const synth = window.speechSynthesis;\r\nlet myerror = [];\r\nlet speech = null;\r\n\r\nexport const startRecoding =  () => async (e) => {\r\n    await recognition.start();\r\n    // e.preventDefault();\r\n}\r\n\r\nexport const restartRecognition = async () => {\r\n    try{\r\n        await recognition.stop(); \r\n        await recognition.start();\r\n    }catch(err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nrecognition.onresult = async (event)=> {\r\n    await recognition.stop(); // stop the cording \r\n    speech = event.results[0][0].transcript;\r\n    // say(speech);\r\n    commandSwitcher(speech);\r\n}\r\n\r\nrecognition.onend = async ()=> {\r\n    await recognition.stop();\r\n}\r\n\r\nrecognition.onerror = (event) => {\r\n    recognition.stop();\r\n    myerror.push('Error: ' + event.error);\r\n    say(\"Oops, I have encountered an error: \" + event.error);\r\n};\r\n\r\nexport const say = (message, voice = 3) => {\r\n    var utterance  = new SpeechSynthesisUtterance(message);\r\n    utterance.voice = setVoice(voice);\r\n    utterance.rate = 1;\r\n    synth.speak(utterance );\r\n}\r\n\r\nconst setVoice = (value)=> {\r\n    const voices = synth.getVoices();\r\n    // console.log(voices);\r\n    return voices[value];\r\n}\r\n\r\nexport const stopRecording = ()=> {\r\n    recognition.stop();\r\n}\r\n\r\nexport const getErrors = () => {\r\n    return myerror;\r\n}\r\n\r\n","import { v4 as uuidv4 } from 'uuid';\r\n\r\nvar responseHistory = []; \r\nconst greetingsPhrases = [ 'Hello there', 'hello', 'Hello', 'Hi', 'hi', 'good morning', 'hey', 'Hey']; \r\nconst lightOnPhrases = ['light on', 'turn on the light', 'turn the light on','turn on light']; \r\nconst lightOffPhrases = ['light off', 'turn off the light', 'turn the light off']; \r\nconst temperaturePhrases = ['temperature', 'temp','weather'];\r\nconst humidityPhrases = ['humidity', 'humid']; \r\nconst lightPhrases = ['light']; \r\nconst wakeNamePhrase = ['jasmine', 'jazmine', 'jazz'];\r\n\r\nexport const responseMessage = (data, topic = '')=> {\r\n    const {temperature, humidity} = data;\r\n    var randomMessage = [];\r\n    var history = {};\r\n\r\n    switch(topic){\r\n        case 'temperature':\r\n            // do somethings here\r\n            randomMessage = [\r\n                `Right now, the temerature is ${temperature} degrees fahrenheit`, \r\n                `At your current location, the temperature is ${temperature} degrees fahrenheit, as of ${getTimeAndDate()}`,\r\n                `${temperature} degrees fahrenheit, is the current temperature at your location`\r\n            ]\r\n            history = {\r\n                id: generateId(),\r\n                time: getTimeAndDate(), \r\n                data: `Temperature: ${temperature}°F`\r\n            }\r\n\r\n            responseHistory.push(history);\r\n            return randomMessage[getRandomNumber(randomMessage.length)];\r\n            \r\n        case 'humidity':\r\n            randomMessage = [\r\n                `As of ${getTimeAndDate()}, the humidity is at ${humidity} %`, \r\n                `In your current location, the humidity is at ${humidity} %`,\r\n                `${humidity} %, is the current humidity at your location`\r\n            ]\r\n\r\n            history = {\r\n                id: generateId(),\r\n                time: getTimeAndDate(), \r\n                data: `Humidity :${humidity}%`\r\n            }\r\n\r\n            responseHistory.push(history);\r\n            return randomMessage[getRandomNumber(randomMessage.length)]; \r\n\r\n        default:\r\n            const message = `Right now, as of ${getTimeAndDate()}, the temperature\r\n             is ${temperature} degrees, and currently, the humidity is at ${humidity}%`;\r\n\r\n             history = {\r\n                 id: generateId(),\r\n                time: getTimeAndDate(), \r\n                data: `Temperature: ${temperature}°F & Humidity ${humidity}%`\r\n            }\r\n\r\n            responseHistory.push(history);\r\n            return  message;\r\n    }\r\n}\r\n\r\nconst getRandomNumber = (len)=>  {\r\n    return Math.floor(Math.random() * len);\r\n    // return Math.random() * (len - 0) + 0;\r\n}\r\n\r\nconst generateId = () => {\r\n    return uuidv4(); \r\n}\r\n\r\nconst getTimeAndDate = () => {\r\n    var time = Date.now(); \r\n    var date = new Date(time); \r\n    const hours = date.getHours(); \r\n    const tempmin = date.getMinutes();\r\n    let minute =''; \r\n    if(tempmin < 10){\r\n        minute = `0${tempmin}`\r\n    }\r\n    \r\n    let theTime = ''; \r\n    hours < 12 ? theTime = `${hours}:${minute}` : theTime = `${hours - 12}:${minute}`; \r\n\r\n    return theTime;\r\n}\r\n\r\nexport const getResponseHistory = () => {\r\n    return responseHistory; \r\n}\r\n\r\nexport const itContainsGreetings = (command) =>{\r\n    let contains = false;\r\n    greetingsPhrases.forEach(phrase =>{\r\n        if(parseReExp(phrase).test(command) || parseReExp(phrase.toUpperCase()).test(command) || parseReExp(phrase.toLowerCase()).test(command)){\r\n            contains = true;\r\n        }\r\n    })\r\n    return contains; \r\n}\r\n\r\nexport const itContainsLightOn = (command) => {\r\n    let contains = false;\r\n    lightOnPhrases.forEach(phrase =>{\r\n        if(parseReExp(phrase).test(command) || parseReExp(phrase.toUpperCase()).test(command) || parseReExp(phrase.toLowerCase()).test(command)){\r\n            contains = true;\r\n        }\r\n    })\r\n    return contains; \r\n}\r\n\r\nexport const itContainsLightOff = (command) => {\r\n    let contains = false;\r\n    lightOffPhrases.forEach(phrase =>{\r\n        if(parseReExp(phrase).test(command) || parseReExp(phrase.toUpperCase()).test(command) || parseReExp(phrase.toLowerCase()).test(command)){\r\n            contains = true;\r\n        }\r\n    })\r\n    return contains; \r\n}\r\n\r\nexport const itContainsGeneric = (command, category) => {\r\n    switch(category){\r\n        case 'temperature':\r\n             return itContains(temperaturePhrases, command); \r\n        case 'humidity':\r\n            return itContains(humidityPhrases, command); \r\n        case 'light':\r\n            return itContains(lightPhrases, command); \r\n        case 'wakename':\r\n            return itContains(wakeNamePhrase, command); \r\n        default:\r\n            return false;\r\n    }\r\n}\r\n\r\nconst itContains = (data, command) => {\r\n    let contains = false;\r\n    data.forEach(phrase =>{\r\n        if(parseReExp(phrase).test(command) || parseReExp(phrase.toUpperCase()).test(command) || parseReExp(phrase.toLowerCase()).test(command)){\r\n            contains = true;\r\n        }\r\n    })\r\n    return contains;\r\n}\r\n\r\n// parins command cheking for matchin key words\r\nconst  parseReExp = (phrase) => {\r\n    return new RegExp('\\\\b' + phrase + '\\\\b');\r\n}","export default __webpack_public_path__ + \"static/media/light-switch.8c18d057.mp3\";","export default __webpack_public_path__ + \"static/media/camera-sound.fca65145.mp3\";","export default __webpack_public_path__ + \"static/media/Cartoon-eye.a3d5fe8a.mp3\";","export default __webpack_public_path__ + \"static/media/car-lock-sound.29602cd9.mp3\";","import light_switch_effect from '../sounds/light-switch.mp3'; \r\nimport camera_sound from '../sounds/camera-sound.mp3'; \r\nimport cartoon_eye from '../sounds/Cartoon-eye.mp3'; \r\nimport car_lock from '../sounds/car-lock-sound.mp3'; \r\n\r\nlet audio = null;\r\nlet sounds = [\r\n    light_switch_effect, \r\n    camera_sound, \r\n    cartoon_eye,\r\n    car_lock\r\n]\r\n\r\nexport const playSound = (index)=> {\r\n    audio = new Audio(sounds[index]);\r\n    audio.play();\r\n}","import axios from 'axios'\r\nimport { say, restartRecognition} from '../command/CommandControl';\r\nimport {responseMessage, itContainsGreetings, itContainsLightOn, itContainsLightOff, itContainsGeneric} from './responseData';\r\nimport {playSound} from '../audio/Audio'\r\nlet preferenceItems = [];\r\nlet HomeEnvi = {};\r\nconst url = 'https://37vspy4wf0.execute-api.us-west-2.amazonaws.com/prod/capstone';\r\n\r\nexport const loadPrerence = async ()=> {\r\n   const promise = await axios.get(url)\r\n   return promise;\r\n}\r\n\r\nexport const savePreference = async(data) => {\r\n   // only update if not empty \r\n   await data.forEach(item => {\r\n      if(item.value !== '' || item.url !== null) {\r\n         const data = {\r\n            \"id\": parseInt(item.id),\r\n            \"url\": item.value\r\n         }\r\n         console.log(data);\r\n         axios.put(url, {\r\n            body: data\r\n         })\r\n         .then(response => console.log(response))\r\n         .catch(err => console.log(err));\r\n      }\r\n   })\r\n}\r\nexport const getTemperature = async () => {\r\n   let currentTemp = 0;\r\n   let data = [];\r\n   await loadPrerence().then(res => preferenceItems = res.data.Items)\r\n   .catch(err => console.log(err)); \r\n   // getting the temp settings \r\n   data = findUrl(preferenceItems, 'temp'); // get the url for tem \r\n   const {url} = data[0];\r\n   loadWeatherData(url).then(res => {\r\n      const {feeds} = res.data; \r\n      const temperature = 'temperature';\r\n      setHomeEnvi(feeds, 'field1', temperature, currentTemp); \r\n   })\r\n   .catch(err => console.log(err));\r\n   getHumidity();\r\n}\r\n\r\nconst loadWeatherData = async (url) => {\r\n   const promise = await axios.get(url, {\r\n      method: 'POST'\r\n   }); \r\n   return promise;\r\n}\r\n\r\nconst getHumidity = () => {\r\n   const data = findUrl(preferenceItems, 'humid'); \r\n   const {url} = data[0]; \r\n   let currentHimidity = 0; \r\n   loadWeatherData(url).then(res => {\r\n      const {feeds} = res.data;\r\n      setHomeEnvi(feeds, 'field2', 'humidity', currentHimidity); \r\n   })\r\n   .catch(err => {\r\n      console.log(err);\r\n   })\r\n}\r\n\r\n\r\nconst findUrl = (data, name) => {\r\n   return data.filter(temp => temp.name === name);\r\n}\r\n\r\nconst setHomeEnvi = (feeds, fliedNum, fieldName, currentVar) => {\r\n   if(fieldName === 'temperature'){\r\n      feeds.forEach(fee => {\r\n         if(fee[`${fliedNum}`] != null){\r\n            currentVar = fee[`${fliedNum}`];\r\n         }\r\n      });\r\n      HomeEnvi = {...HomeEnvi, temperature: currentVar};\r\n   }\r\n   if(fieldName === 'humidity'){\r\n      feeds.forEach(fee => {\r\n         if(fee[`${fliedNum}`] != null){\r\n            currentVar = fee[`${fliedNum}`];\r\n         }\r\n      });\r\n      HomeEnvi = {...HomeEnvi, humidity: currentVar};\r\n      // console.log(HomeEnvi)\r\n   }\r\n}\r\nexport const getHomeEnvi = () => {\r\n   return HomeEnvi;\r\n}\r\n\r\nexport const parseLightCommand = (command) => {\r\n   let lightStatus = null;\r\n   if(itContainsLightOn(command)) {\r\n      lightStatus = 1;\r\n   }\r\n   if(itContainsLightOff(command)) {\r\n      lightStatus = 0;\r\n   }\r\n   writeLightStatus(lightStatus);\r\n}\r\n\r\nconst writeLightStatus = async (lightStatus) => {\r\n   if(lightStatus != null){\r\n      await axios.get(`https://api.thingspeak.com/update?api_key=P0CY7LTP925HD9R2&field1=${lightStatus}`)\r\n      .then(res => {\r\n         if(res.status === 200){\r\n            playSound(0); // play alight switch sound  \r\n         }\r\n      })\r\n      .catch(err =>{\r\n         say(`An error has occurred, i could not perform that command.`); \r\n         console.log(err);\r\n      });\r\n   }\r\n   else {\r\n      say(\"Sorry, i'm not sure what you meant, please try again...\"); // speaking \r\n   } \r\n}\r\n\r\nexport const commandSwitcher = (command) => {\r\n   // contains the word temperature or humidity\r\n   if(itContainsGeneric(command, 'temperature') || itContainsGeneric(command, 'humidity')){\r\n      getTemperature();\r\n      const data = getHomeEnvi();\r\n      const message = responseMessage(data, '');\r\n      say(message); // speaking \r\n   }\r\n   // contains the word light \r\n   else if(itContainsGeneric(command, 'light')) {\r\n      parseLightCommand(command);\r\n   }\r\n   // contains the wakeName\r\n   else if(itContainsGeneric(command, 'wakename')) {\r\n      say(\"Hello, I'm listening...\"); \r\n   }\r\n   else if(itContainsGreetings(command)){\r\n      say(\"Hi\");\r\n      setTimeout(function(){\r\n         say('What can i help you with?.')\r\n      }, 2000);\r\n      restartRecognition();\r\n   }\r\n   else {\r\n      say(\"Hello\");\r\n      setTimeout(function(){\r\n         say(`I'm not sure what you meant by: ${command}`);\r\n         say('Please try saying or typing your command again.')\r\n      }, 2000); \r\n   }\r\n}\r\n\r\n","\r\nimport React, {useState} from 'react'\r\nimport {getTemperature, getHomeEnvi, commandSwitcher} from '../utilities/utils';\r\nimport {say,startRecoding, getErrors} from './CommandControl';\r\nimport {responseMessage, getResponseHistory} from '../utilities/responseData';\r\n\r\nconst Command = () => {\r\n    const [command, setCommand] = useState('');\r\n    const [statusMessage, setStatusMessage] = useState([]); \r\n\r\n    const speak = ()=> (e) => {\r\n        getTemperature()\r\n        const message = getMessage();\r\n        say(message, 4);\r\n        if(getErrors().length > 0) console.log(getErrors());\r\n        updateState();\r\n    }\r\n\r\n    const updateState =  ()=> {\r\n        setStatusMessage(getResponseHistory());\r\n    }\r\n\r\n    // update the screen every 2 second\r\n    window.setInterval(updateState, 1000);\r\n\r\n    const getMessage =  ()=> {\r\n        const data =  getHomeEnvi();\r\n        const message = responseMessage(data, '');\r\n        return message;\r\n    }\r\n\r\n    const send = (event)=> {\r\n        event.preventDefault();\r\n        getLightStatus(command);\r\n    }\r\n\r\n    const handleOnchange = (event)=> {\r\n        event.preventDefault();\r\n        setCommand(event.target.value);\r\n    }\r\n\r\n    const getLightStatus = (status)=> {\r\n        commandSwitcher(status);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"command-wrapper mb-4\">\r\n                <h4>Voice Command Center</h4>\r\n                <hr/>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 card\">\r\n                    <div className=\"card-body\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-6 mb-4\">\r\n                                <button onClick= {startRecoding()} className=\"btn btn-warning\" style={{backgroundColor:'orange'}}>Start Listening</button>\r\n                            </div>\r\n                            <div className=\"col-lg-6 mb-4\">\r\n                                <button onClick= {speak()} className=\"btn btn-danger\" style={{backgroundColor:''}}>Stop Listening</button>\r\n                            </div>\r\n                            <hr/>\r\n                            <br/>\r\n                            <div className=\"mt-4 mb-4\">\r\n                                <p>Enter Command Manually Below</p>\r\n                                <form className=\"form-group\">\r\n                                    <input onChange={handleOnchange} className=\"form-control\" type=\"text\" name=\"command\" style={{height: '100px'}}/>\r\n                                    <br/>\r\n                                    <button onClick={send} className=\"btn\" style={{backgroundColor:'orange'}}>Send</button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"col-lg-6\">\r\n                    <div>\r\n                        <h5>Results history</h5>\r\n                        <hr/>\r\n                        <div className=\"card-boby\">\r\n                           {statusMessage.map((mess) => (\r\n                               <div style={{height:'80px', backgroundColor:'#e8d43f'}} className=\"alert mt-2\" key={mess.id}>\r\n                                   <div>@{mess.time} <p className=\"text-center mt-0\">{mess.data}</p></div>\r\n                               </div>\r\n                           ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <br/>\r\n           {/*<p>Enter Command Manually Below</p>\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-6 card\">\r\n                    <div className=\"card-body\">\r\n                        <form className=\"form-group\">\r\n                            <input className=\"form-control\" type=\"text\" name=\"command\" style={{height: '100px'}}/>\r\n                            <br/>\r\n                            <button className=\"btn\" style={{backgroundColor:'orange'}}>Send</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n           </div>*/}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Command;","import React from 'react'\r\n\r\nconst leftAside = ({menuItems, handleChange}) => {\r\n    return (\r\n        <div>\r\n            <div className=\"list-group\">\r\n                {menuItems.map(menu => (\r\n                    <button style={(menu.selected)? {\r\n                        borderLeft: '5px solid orange', \r\n                        borderRadius: '0px'\r\n                    }: {}} value={menu.name} onClick={handleChange()} key={menu.id} className=\"form-control list-group-item\">{menu.alias}</button>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default leftAside;","import React, {useState, useEffect} from 'react'\r\nimport {loadPrerence, savePreference} from '../utilities/utils'\r\n\r\nconst Preference = ()=> {\r\n    const [myAPI, setMyAPI] = useState([]); \r\n    const [tempUrl, setTempUrl] = useState({id: null, url: ''});\r\n    const [humidityUrl, setHumidityUrl] = useState({id: null, url: ''}); \r\n    const [proximityUrl, setProximityUrl] = useState({id: null, url: ''});\r\n    \r\n\r\n    useEffect(()=>{\r\n        loadPrerence().then(res =>setMyAPI(res.data.Items))\r\n        .catch(err => console.log(err));\r\n    });\r\n\r\n    // const handleLoadPreference =  ()=> {\r\n    //     const data = loadPrerence()\r\n    //     data.then(response => {\r\n    //         const {Items} = response.data; \r\n    //         setMyAPI(Items)\r\n    //     })\r\n    //     .catch(error => {\r\n    //         console.log(error);\r\n    //     })\r\n    // }\r\n\r\n    const handleChange = ()=> (event)=>{\r\n        // updateUrl(event.target.name, event.target.value); \r\n        const {name, id, value} = event.target;\r\n    \r\n        switch(name){\r\n            case 'temp':\r\n                setTempUrl({id,value});\r\n                break;\r\n            case 'humid':\r\n                setHumidityUrl({id, value});\r\n                break;\r\n            case 'prox':\r\n                setProximityUrl({id,value});\r\n                break;\r\n            default:\r\n                console.log('error updateUrl')\r\n        }\r\n    }\r\n\r\n    // const updateUrl = (servicename, value) =>{\r\n    //     const selected =  myAPI.filter(api => api.name === servicename);\r\n    //     const tempAPI = [];\r\n    //     myAPI.forEach(api => {\r\n    //         if(api.name === selected[0].name){\r\n    //             const temp = {...api, url: value}; \r\n    //             tempAPI.push(temp);\r\n    //         }\r\n    //         else {\r\n    //             tempAPI.push(api); \r\n    //         }\r\n    //     })\r\n\r\n    //     setMyAPI(tempAPI); \r\n    // }\r\n\r\n    const saveChange = () => (e)=>{\r\n        e.preventDefault();\r\n        const data = [tempUrl, humidityUrl, proximityUrl];\r\n        // save data to data base \r\n        savePreference(data);\r\n    }\r\n\r\n    return (\r\n        <div className=\"pref-wrapper\">\r\n            <div>\r\n                <h4>Settings & Preferences</h4>\r\n            </div>\r\n            <hr/>\r\n            <div className=\"mt-4\">\r\n                {\r\n                    myAPI.map(api => (\r\n                        <div className=\"row\" key={api.id}>\r\n                            <div className=\"col-lg-4\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-body\">\r\n                                        <i className=\"fas fa-info-circle\" style={{float: 'right'}}></i>\r\n                                        <div className=\"card-text mt-3\">\r\n                                            <p>{api.desc}</p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <br/>\r\n                            </div>\r\n                            <div className=\"col-lg-8\">\r\n                                <div className=\"\">\r\n                                    <form className=\"form-group\">\r\n                                        <input id={api.id} onChange={handleChange()} style={{paddingLeft: '100px'}} className=\"form-control\" type=\"text\" name={api.name} \r\n                                        /> <br/>\r\n                                        <p><strong>Current endpoint: </strong> {api.url}</p>\r\n                                         <i className=\"fas fa-edit\" style={{float: 'right'}}></i>\r\n                                    </form>\r\n                                </div>\r\n                                <br/>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n            <hr/>\r\n            <br/>\r\n            <div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-6\">\r\n                        <form className=\"form-group\">\r\n                            <button className=\"btn btn-danger form-control mb-2\">Cancel</button>\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"col-lg-6\">\r\n                        <form className=\"form-group\">\r\n                            <button className=\"btn btn-success form-control mb-2\" onClick={saveChange()}>Update</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preference;\r\n\r\n\r\n","import React, {useState } from 'react'\r\nimport Command from '../command/Command';\r\nimport LeftAside from '../left_aside/LeftAside';\r\nimport Preference from '../preference/Preference';\r\n// import { Redirect} from 'react-router-dom';\r\n// import { useHistory } from 'react-router-dom';\r\n// import { useOktaAuth } from '@okta/okta-react';\r\n\r\n\r\nconst Dashboard = () => {\r\n    const [currentPage, setCurrentPage] = useState('dashboard'); \r\n    // const [history, setHistory] = useState(useHistory());\r\n    // const [oktaAuth, setOktaAuth] = useState(useOktaAuth()); \r\n    // const [authState, setAuthState] = useState(useOktaAuth());\r\n    const [menuItems, setMenuItems] = useState( [\r\n        {\r\n            id: 0,\r\n            name: 'dashboard', \r\n            alias: 'Dashboard', \r\n            selected: true\r\n        }, \r\n        {\r\n            id: 1,\r\n            name: 'preference', \r\n            alias: 'Preference', \r\n            selected: false\r\n        }\r\n\r\n    ])\r\n    \r\n    // method handle change \r\n    const handleChange = () => (event)=>{\r\n        event.preventDefault();\r\n        const selected = event.target.value.toLowerCase()\r\n        setCurrentPage(selected);\r\n        toggleSelected(selected);\r\n    }\r\n\r\n    const toggleSelected = (name)=>{\r\n        const selected =  menuItems.filter(menu => menu.name === name); \r\n        const changeStatus = [];\r\n        menuItems.forEach(menu => {\r\n            if(menu.name === selected[0].name){\r\n                if(menu.selected === false){\r\n                    const temp = {...menu, selected: true}; \r\n                    changeStatus.push(temp);\r\n                }\r\n                else{\r\n                    changeStatus.push(menu);\r\n                }\r\n            }\r\n            else {\r\n                const temp = {...menu, selected:false};\r\n                changeStatus.push(temp); \r\n            }\r\n        })\r\n        setMenuItems(changeStatus);\r\n    }\r\n\r\n\r\n    // const login = async () => history.push('/login');\r\n    \r\n    // const logout = async () => {\r\n    //     oktaAuth.signOut();\r\n    //     if(!authState.isAuthenticated) <Redirect to= {{pathname: '/login'}}></Redirect>\r\n    // }\r\n\r\n    switch(currentPage){\r\n        case 'dashboard':\r\n            return (\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-2 col-md-4\">\r\n                            <LeftAside menuItems= {menuItems} handleChange={handleChange}></LeftAside>\r\n                        </div>\r\n                        <div className=\"col-lg-10 col-md-8\">\r\n                            <Command></Command>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n\r\n        case 'preference':\r\n            return(\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-lg-2 col-md-4\">\r\n                            <LeftAside menuItems= {menuItems} handleChange={handleChange}></LeftAside>\r\n                        </div>\r\n                        <div className=\"col-lg-10 col-md-8\">\r\n                            <Preference></Preference>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        default: {\r\n            return null\r\n        }\r\n    }\r\n};\r\n\r\nexport default Dashboard;","import React, { useEffect, useRef } from 'react';\r\nimport OktaSignIn from '@okta/okta-signin-widget';\r\nimport '@okta/okta-signin-widget/dist/css/okta-sign-in.min.css';\r\n\r\nconst OktaSignInWidget = ({ config, onSuccess, onError }) => {\r\n  const widgetRef = useRef();\r\n  useEffect(() => {\r\n    if (!widgetRef.current)\r\n      return false;\r\n    \r\n    const widget = new OktaSignIn(config);\r\n\r\n    widget.showSignInToGetTokens({\r\n      el: widgetRef.current,\r\n    }).then(onSuccess).catch(onError);\r\n\r\n    return () => widget.remove();\r\n  }, [config, onSuccess, onError]);\r\n\r\n  return (<div ref={widgetRef} />);\r\n};\r\nexport default OktaSignInWidget;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport OktaSignInWidget from './OktaSignInWidget';\r\nimport { useOktaAuth } from '@okta/okta-react';\r\n\r\nconst Login = ({ config }) => {\r\n  const { oktaAuth, authState } = useOktaAuth();\r\n\r\n  const onSuccess = (tokens) => {\r\n    oktaAuth.handleLoginRedirect(tokens);\r\n  };\r\n\r\n  const onError = (err) => {\r\n    console.log('error logging in', err);\r\n  };\r\n\r\n  if (authState.isPending) return null;\r\n\r\n  return authState.isAuthenticated ?\r\n    <Redirect to={{ pathname: '/dashboard' }}/> :\r\n    <OktaSignInWidget\r\n      config={config}\r\n      onSuccess={onSuccess}\r\n      onError={onError}/>;\r\n};\r\nexport default Login;","export default __webpack_public_path__ + \"static/media/neurolinks.3fa4edda.jpg\";","import React, { Component } from 'react'; \r\nimport neurolinks from '../images/neurolinks.jpg';\r\nimport '../../App.css';\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {  };\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div style={bg}>\r\n          <div className=\"contain\">\r\n            <div className=\"title-wrapper text-center text-white\">\r\n              <h1 className=\"title\">The world is at the tip of your tongue</h1>\r\n              <h3 className=\"subtittle\">Control every aspect of your home with your voice</h3>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"mt-4\">\r\n          <div className=\"container\">\r\n            <h3 className=\"text-center\">Controls</h3>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst bg = {\r\n  backgroundImage: `url(\"${neurolinks}\")`, \r\n  height:'600px'\r\n}\r\nexport default Home;","import React from 'react'\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useOktaAuth } from '@okta/okta-react';\r\n\r\n\r\nfunction Navabar () {\r\n    const history = useHistory();\r\n    const { oktaAuth, authState } = useOktaAuth();\r\n\r\n    if (authState.isPending) return null;\r\n\r\n    const login = async () => history.push('/login');\r\n    \r\n    const logout = async () => {\r\n        oktaAuth.signOut();\r\n        if(!authState.isAuthenticated) <Redirect to= {{pathname: '/login'}}></Redirect>\r\n    }\r\n    const button = authState.isAuthenticated ? \r\n        <Link className=\"nav-link\" to={\"#\"} onClick={logout}>Logout</Link>:\r\n        <Link className=\"nav-link\" to={\"#\"} onClick={login}>Login</Link>\r\n    return (\r\n        <div className=\"container-fluid mb-4\">\r\n            <nav className=\"navbar navbar-expand-sm navbar-default\">\r\n                <div className=\"navbar-brand\">\r\n                    <h3 className=\"ml-4\">Capstone</h3>\r\n                </div>\r\n                <ul className=\"nav navbar-nav ml-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to={\"/\"}>Home</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to={\"/dashboard\"}>Dashboard</Link>\r\n                    </li>\r\n                    <li className=\"nav-item ml-auto\">\r\n                        {button}\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    );\r\n        \r\n}\r\n\r\nexport default Navabar ;\r\n\r\n","import './App.css';\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport {Security, SecureRoute , LoginCallback } from '@okta/okta-react';\r\nimport {OktaAuth, toRelativeUrl } from '@okta/okta-auth-js'; \r\nimport { oktaAuthConfig, oktaSignInConfig } from './components/auth/config';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Dashboard from './components//dashboard/Dashboard';\r\nimport Login from './components/auth/Login';\r\nimport Home from './components/home/Home'\r\nimport Navabar from './components/navbar/Navbar';\r\n\r\nconst oktaAuth = new OktaAuth(oktaAuthConfig);\r\n\r\nfunction App() {\r\n  let history = useHistory();\r\n\r\n  const customAuthHandler = () => {\r\n    history.push('/login');\r\n  };\r\n\r\n  const restoreOriginalUri = async (_oktaAuth, originalUri) => {\r\n    history.replace(toRelativeUrl(originalUri, window.location.origin));\r\n  };\r\n\r\n  return (\r\n      <Security\r\n        oktaAuth={oktaAuth}\r\n        onAuthRequired={customAuthHandler}\r\n        restoreOriginalUri={restoreOriginalUri}\r\n        >\r\n       <Navabar></Navabar>\r\n      <Switch>\r\n        <SecureRoute path='/dashboard' component={Dashboard} />\r\n        <Route path='/login' render={() => <Login config={oktaSignInConfig} />} />\r\n        <Route path='/login/callback' component={LoginCallback} />\r\n        <Route path='/' exact={true} component={Home} />\r\n      </Switch>\r\n    </Security>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n        <App />\r\n      </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}